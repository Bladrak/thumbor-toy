.sidebar {
  z-index: 100;
  position: fixed;

  top:    $header-height;
  bottom: 0;

  width: 20%;

  t(background-color, 'panel-bg-color')

  transition: transform 200ms;

  &._is-opened {
    transform: translate3d(0, 0, 0);
    .sidebar__toggle {
      props = width, height, line-height
      t-all(props, 'panel-toggle-close-size')

      box-shadow: 0 0 0 rgba(0, 0, 0, 0);

      t(background, 'panel-toggle-close-bg-color')
      t(color,      'panel-toggle-close-txt-color')

      t-fn(border-radius, 'panel-toggle-close-size', @(list) { return (list[0] / 2) })

      t(font-size, 'panel-toggle-close-txt-size')

      &:hover {
        t(background, 'panel-toggle-close-bg-color-hover')
        t(color,      'panel-toggle-close-txt-color-hover')
      }
    }
  }

  &--settings._is-opened {
    .sidebar__toggle {
      keys = 'panel-toggle-close-offset', 'panel-toggle-close-size'
      t-fn('right', keys, @(list) { return (list[0] + list[1]) * -1 })
}
  }
  &--filters._is-opened {
    .sidebar__toggle {
      keys = 'panel-toggle-close-offset', 'panel-toggle-close-size'
      t-fn('left', keys, @(list) { return (list[0] + list[1]) * -1 })
    }
  }

  &--settings {
    left: 0;
    transform: translate3d(-100%, 0, 0);
    .sidebar__toggle {
      keys = 'panel-toggle-open-offset', 'panel-toggle-open-size'
      t-fn('right', keys, @(list) { return (list[0] + list[1]) * -1 })
    }
  }

  &--filters {
    right: 0;
    transform: translate3d(100%, 0, 0);
    .sidebar__toggle {
      keys = 'panel-toggle-open-offset', 'panel-toggle-open-size'
      t-fn('left', keys, @(list) { return (list[0] + list[1]) * -1 })
    }
  }

  &__toggle {
    cursor: pointer;

    position: absolute;

    text-align: center;

    display: block;

    t(top, 'panel-toggle-open-offset');

    props = width, height, line-height
    t-all(props, 'panel-toggle-open-size')

    t-fn(border-radius, 'panel-toggle-open-size', @(list) { return (list[0] / 2) })

    t(background, 'panel-toggle-open-bg-color');
    t(color,      'panel-toggle-open-txt-color');

    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.25);

    t(font-size, 'panel-toggle-open-txt-size');

    &:hover {
      t(background, 'panel-toggle-open-bg-color-hover');
      t(color,      'panel-toggle-open-txt-color-hover');
    }
  }
}